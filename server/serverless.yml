service: smashbits

plugins:
  - serverless-plugin-typescript
  - serverless-domain-manager
  - serverless-offline # serverless-offline needs to be last in the list

# Enable auto-packing of external modules
custom:
  customDomain:
    domainName: api.smashbits.dev
    basePath: ''
    stage: ${self:provider.stage}
    certificateName: '*.smashbits.dev'
    createRoute53Record: true
  serverless-offline:
    httpPort: 3001
    noPrependStageInUrl: true # GET /bits instead of GET /dev/bits

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    STORE_URI: ${file(./secret/config.${self:provider.stage}.yml):storeUri}
    BASE_SERVER_URL: ${file(./env/config.${self:provider.stage}.yml):baseServerUrl}
    BASE_CLIENT_URL: ${file(./env/config.${self:provider.stage}.yml):baseClientUrl}
    TWITTER_API_KEY: ${file(./secret/config.${self:provider.stage}.yml):twitterApiKey}
    TWITTER_API_SECRET_KEY: ${file(./secret/config.${self:provider.stage}.yml):twitterApiSecretKey}
    SESSION_SECRET: ${file(./secret/config.${self:provider.stage}.yml):sessionSecret}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  getBits:
    handler: index.handler
    events:
      - http: GET /bits
      - http: 'GET /bits/{proxy+}'
  createBit:
    handler: index.handler
    events:
      - http: POST /bits
      - http: 'POST /bits/{proxy+}'
    cors: true
  getProfile:
    handler: index.handler
    events:
      - http: GET /profile
  twitterCallback:
    handler: index.handler
    events:
      - http: GET /oauth/twitter/callback
  twitterLogin:
    handler: index.handler
    events:
      - http: GET /login/twitter
